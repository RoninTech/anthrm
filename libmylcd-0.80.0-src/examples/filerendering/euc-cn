
2.3 Tools Programming

编程初步

　　程序就是一系列指令的集合，这些指令能驱使计算机去做不同的事情。有时候计
算机执行的一个指令取决于它所执行的前一个指令。本章将介绍两种主要的给出指令， 也叫
“命令”，的方式。一种方式是使用 解释器 ，另一种方式是使用 
编译器。人类语言对
于计算机来说语义模糊太难于理解，因此计算机命令都用为了特定目的设计的的一种或
其他种计算机语言写的。

2.3.1 解释器

　　使用解释器的计算机语言就像一个环境。解释器给出提示符后，你输入一个命
令，解释器就会执行这个命令。对于更复杂的程序，可以把命令写入一个文件然后
让解释器装入这个文件再执行其中的命令。如果有错误发生，许多解释器会进入一个
调试环境让你来追踪问题。

　　这种方式的优点就是可以马上看见命令的执行结果，并且迅速的改正错误。如
果你想和别人分享自己的程序，最大的坏处就显现出来了。别人需要和你一样的解释
器，或者你必须把解释器给他们，而且他们还要知道怎么使用这个解释器。用户也不
希望在按错一个键的情况下就被扔到调试环境中。从程序执行效率来看，解释器会
使用很多内存，而且通常情况下生成的代码也不如编译器生成的有效率。

　　我觉得，如果你从未编过程序，最好从解释类语言开始。Lisp，Smalltalk， Perl 和 Basic
语言就提供了这样的环境。 UNIX &reg; 中的 shell (sh, csh) 自身就是一个解释器。实际情
况中，很多人都在他们自己的机器上写 shell “scripts” 来做很多 “维护”工作。的确，
UNIX  的哲学中有一部分就是提供很多小工具， 并使用 shell scripts
把这些工具组合起来去做有用的工作。

